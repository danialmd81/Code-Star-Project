version: "3.8"

services:
  pg-0:
    image: bitnami/postgresql-repmgr:15
    container_name: pg-0
    env_file:
      - ../../.env
    environment:
      - REPMGR_NODE_NAME=pg-0
      - REPMGR_NODE_NETWORK_NAME=pg-0
    configs:
      - source: init_script
        target: /docker-entrypoint-initdb.d/01-init.sql
    volumes:
      - database_data:/bitnami/postgresql
    networks:
      - etl-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 5s
      retries: 5
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M

  # TODO #22 use a load balancer or virtual IP to always point to the current primary, regardless of which container it is.
  pg-1:
    image: bitnami/postgresql-repmgr:15
    container_name: pg-1
    env_file:
      - ../../.env
    environment:
      - REPMGR_NODE_NAME=pg-1
      - REPMGR_NODE_NETWORK_NAME=pg-1
    configs:
      - source: replica_init_script
        target: /docker-entrypoint-initdb.d/01-pg-1-init.sql
    volumes:
      - replica_data:/bitnami/postgresql
    networks:
      - etl-network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M

  database:
    image: haproxy:alpine
    container_name: haproxy
    configs:
      - source: ha-config
        target: /usr/local/etc/haproxy/haproxy.cfg
    networks:
      - etl-network
    ports:
      - "5432:5432"
    depends_on:
      - pg-0
      - pg-1

  backup:
    image: prodrigestivill/postgres-backup-local
    container_name: backup
    env_file:
      - ../../.env
    volumes:
      - ./backups:/backups
    networks:
      - etl-network
    depends_on:
      - pg-0

networks:
  etl-network:
    driver: overlay
    attachable: true
    name: etl-network

volumes:
  database_data:
    name: database_data
  replica_data:
    name: replica_data

configs:
  init_script:
    file: ./init/01-init.sql
  replica_init_script:
    file: ./replica-init/01-init.sql
  ha-config:
    file: ./haproxy.cfg
