version: "3.8"

services:
  database:
    image: bitnami/postgresql-repmgr:15
    container_name: database
    env_file:
      - ../../.env
    environment:
      - REPMGR_NODE_NAME=database-1
      - REPMGR_NODE_NETWORK_NAME=database
    configs:
      source: init_script
      target: /docker-entrypoint-initdb.d/01-init.sql
    volumes:
      - database_data:/bitnami/postgresql
    networks:
      - etl-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 5s
      retries: 5

  # TODO #22 use a load balancer or virtual IP to always point to the current primary, regardless of which container it is.
  replica:
    image: bitnami/postgresql-repmgr:15
    container_name: replica
    env_file:
      - ../../.env
    environment:
      - REPMGR_NODE_NAME=replica-2
      - REPMGR_NODE_NETWORK_NAME=replica
    configs:
      source: replica_init_script
      target: /docker-entrypoint-initdb.d/01-replica-init.sql
    volumes:
      - replica_data:/bitnami/postgresql
    networks:
      - etl-network

  backup:
    image: prodrigestivill/postgres-backup-local
    container_name: backup
    environment:
      POSTGRES_HOST: database
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

      # POSTGRES_DB: ${POSTGRES_DB:-etl_db}
      # POSTGRES_USER: ${POSTGRES_USER:-postgres}
      # POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}

      SCHEDULE: "0 3 * * *"
      BACKUP_KEEP_DAYS: 7
      BACKUP_KEEP_WEEKS: 4
      BACKUP_KEEP_MONTHS: 6
    volumes:
      - ./backups:/backups
    networks:
      - etl-network
    depends_on:
      - database

networks:
  etl-network:
    driver: bridge

volumes:
  database_data:
    name: database_data
  replica_data:
    name: replica_data

configs:
  init_script:
    file: ./init/01-init.sql
  replica_init_script:
    file: ./replica-init/01-replica-init.sql
