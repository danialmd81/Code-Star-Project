version: "3.8"
services:
  spark-master:
    image: apache/spark:3.5.0
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_PORT=7077
    configs:
      - source: spark_defaults
        target: /opt/spark/conf/spark-defaults.conf
      - source: spark_metrics
        target: /opt/spark/conf/metrics.properties
    secrets:
      - source: ssl_cert
        target: /opt/spark/conf/cert.pem
      - source: ssl_key
        target: /opt/spark/conf/key.pem
    ports:
      - "7077:7077" # Master Port
      - "8080:8080" # Master Web UI
      - "8443:8443" # Master SSL
    networks:
      - etl_network
    volumes:
      - spark_data:/opt/spark/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
        labels: "service=spark"
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master
    deploy:
      placement:
        constraints:
          - node.role == worker
    # restart_policy:
    #   condition: on-failure
    # resources:
    #   limits:
    #     cpus: "1"
    #     memory: 1G
    #   reservations:
    #     cpus: "0.5"
    #     memory: 512M

  # Spark worker nodes
  spark-worker:
    image: apache/spark:3.5.0
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    configs:
      - source: spark_defaults
        target: /opt/spark/conf/spark-defaults.conf
      - source: spark_metrics
        target: /opt/spark/conf/metrics.properties
    secrets:
      - source: ssl_cert
        target: /opt/spark/conf/cert.pem
      - source: ssl_key
        target: /opt/spark/conf/key.pem
    ports:
      - "7080:8080" # Worker Web UI
      - "7443:8443" # Worker SSL
    networks:
      - etl_network
    volumes:
      - spark_worker_data:/opt/spark/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
        labels: "service=spark"
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    deploy:
      placement:
        constraints:
          - node.role == worker
        preferences:
          - spread: node.id
    # restart_policy:
    #   condition: on-failure
    # resources:
    #   limits:
    #     cpus: "1"
    #     memory: 1G
    #   reservations:
    #     cpus: "0.5"
    #     memory: 512M

  # Spark History Server for job history and logs
  spark-history-server:
    image: apache/spark:3.5.0
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.history.HistoryServer
    environment:
      - SPARK_MODE=master # Using master mode for the history server
    configs:
      - source: spark_defaults
        target: /opt/spark/conf/spark-defaults.conf
      - source: spark_metrics
        target: /opt/spark/conf/metrics.properties
    secrets:
      - source: ssl_cert
        target: /opt/spark/conf/cert.pem
      - source: ssl_key
        target: /opt/spark/conf/key.pem
    ports:
      - "6080:8080" # History Server UI
      - "6443:8443" # History Server SSL
    networks:
      - etl_network
    volumes:
      - spark_history_data:/spark-logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
        labels: "service=spark"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      # resources:
      #   limits:
      #     cpus: "0.25"
      #     memory: 256M
      #   reservations:
      #     cpus: "0.1"
      #     memory: 128M

networks:
  etl_network:
    external: true

volumes:
  spark_data:
    driver: local
    name: spark_data
  spark_worker_data:
    driver: local
    name: spark_worker_data
  spark_history_data:
    driver: local
    name: spark_history_data

configs:
  spark_defaults:
    file: ./conf/spark-defaults.conf
  spark_metrics:
    file: ./conf/metrics.properties

secrets:
  ssl_cert:
    file: ../../secrets/fullchain.pem
  ssl_key:
    file: ../../secrets/privkey.pem
