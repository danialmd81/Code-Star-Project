server:
  http_listen_port: 9080

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    tenant_id: default

scrape_configs:
  # Docker containers with service discovery
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ["__meta_docker_container_name"]
        regex: "/(.*)"
        target_label: "container"
      - source_labels: ["__meta_docker_container_log_stream"]
        target_label: "logstream"
      - source_labels:
          ["__meta_docker_container_label_com_docker_swarm_service_name"]
        target_label: "service"
      - source_labels:
          ["__meta_docker_container_label_com_docker_swarm_node_id"]
        target_label: "node"

  # Service-specific configurations
  - job_name: database
    pipeline_stages:
      - match:
          selector: '{service=~".*database.*"}'
          stages:
            - regex:
                expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) (?P<level>\w+): (?P<message>.*)$'
            - labels:
                level:

  - job_name: keycloak
    pipeline_stages:
      - match:
          selector: '{service=~".*keycloak.*"}'
          stages:
            - json:
                expressions:
                  level: level
                  logger: logger_name
            - labels:
                level:
                logger:

  - job_name: monitoring
    pipeline_stages:
      - match:
          selector: '{service=~".*monitoring.*"}'
          stages:
            - regex:
                expression: '(?P<timestamp>\d{2}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) (?P<level>\w+) (?P<message>.*)'
            - labels:
                level:

  - job_name: nginx
    pipeline_stages:
      - match:
          selector: '{service=~".*nginx.*"}'
          stages:
            - regex:
                expression: '(?P<timestamp>\d{2}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) (?P<level>\w+) (?P<message>.*)'
            - labels:
                level:

  - job_name: registry
    pipeline_stages:
      - match:
          selector: '{service=~".*registry.*"}'
          stages:
            - regex:
                expression: '(?P<timestamp>\d{2}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) (?P<level>\w+) (?P<message>.*)'
            - labels:
                level:

  - job_name: spark
    pipeline_stages:
      - match:
          selector: '{service=~".*spark.*"}'
          stages:
            - regex:
                expression: '(?P<timestamp>\d{2}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) (?P<level>\w+) (?P<message>.*)'
            - labels:
                level:
