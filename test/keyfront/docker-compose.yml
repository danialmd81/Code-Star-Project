services:
  centraldb:
    image: postgres:15-alpine
    container_name: centraldb
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - centraldb_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - etl-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s # Added start period for initial setup

  # Keycloak server
  keycloak:
    image: quay.io/keycloak/keycloak:26.3
    container_name: keycloak
    restart: unless-stopped
    command:
      - start
      - --import-realm
    depends_on:
      centraldb:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      # JVM settings
      JAVA_OPTS_APPEND: >-
        -Xms1g -Xmx2g
        -XX:MetaspaceSize=96m
        -XX:MaxMetaspaceSize=256m
        -XX:+ParallelRefProcEnabled
        -XX:+UseStringDeduplication
        -Djava.net.preferIPv4Stack=true
    volumes:
      # Persistent themes
      - keycloak_themes:/opt/keycloak/themes
      - ./realm-config:/opt/keycloak/data/import
      - ./conf:/etc/letsencrypt:ro
    ports:
      - "8443:8443" # HTTPS port
      - "8080:8080" # HTTP port
    networks:
      - etl-network

  # Nginx as reverse proxy with SSL termination
  nginx:
    image: nginx:stable-alpine
    container_name: keycloak-nginx
    restart: unless-stopped
    depends_on:
      - keycloak
    env_file:
      - ./.env
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./conf:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - etl-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Frontend application (uncomment when ready)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: etl-frontend
  # restart: unless-stopped
  #   networks:
  #     - etl-network
  #   depends_on:
  #     - keycloak
  #     - nginx
  #   volumes:
  #     - frontend_data:/usr/share/nginx/html
  #   env_file:
  #     - ./.env

networks:
  etl-network:
    name: etl-network

volumes:
  centraldb_data:
    driver: local
    name: centraldb_data
  keycloak_themes:
    driver: local
    name: keycloak_themes
  frontend_data:
    driver: local
    name: frontend_data
